{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\New folder\\\\IPT-Final-2025\\\\src\\\\components\\\\DepartmentDialog.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, TextField, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DepartmentDialog = ({\n  open,\n  onClose,\n  onSave,\n  department,\n  mode\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: (department === null || department === void 0 ? void 0 : department.name) || '',\n    description: (department === null || department === void 0 ? void 0 : department.description) || ''\n  });\n  const [errors, setErrors] = useState({});\n  React.useEffect(() => {\n    if (department) {\n      setFormData(department);\n    }\n    setErrors({});\n  }, [department]);\n  const validateForm = () => {\n    const newErrors = {};\n\n    // Check required fields\n    if (!formData.name) newErrors.name = 'Department name is required';\n    if (!formData.description) newErrors.description = 'Description is required';\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: undefined\n      }));\n    }\n  };\n  const handleSubmit = () => {\n    if (validateForm()) {\n      onSave(formData);\n      onClose();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    maxWidth: \"sm\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: mode === 'add' ? 'Add Department' : 'Edit Department'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Dept. Name\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleInputChange,\n        error: !!errors.name,\n        helperText: errors.name,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        margin: \"normal\",\n        label: \"Description\",\n        name: \"description\",\n        value: formData.description,\n        onChange: handleInputChange,\n        multiline: true,\n        rows: 3,\n        error: !!errors.description,\n        helperText: errors.description,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        children: mode === 'add' ? 'Add' : 'Save'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(DepartmentDialog, \"I/Kqu1aBbZyIkCZSGIUPot6anU4=\");\n_c = DepartmentDialog;\nexport default DepartmentDialog;\nvar _c;\n$RefreshReg$(_c, \"DepartmentDialog\");","map":{"version":3,"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Button","jsxDEV","_jsxDEV","DepartmentDialog","open","onClose","onSave","department","mode","_s","formData","setFormData","name","description","errors","setErrors","useEffect","validateForm","newErrors","Object","keys","length","handleInputChange","e","value","target","prev","undefined","handleSubmit","maxWidth","fullWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","margin","label","onChange","error","helperText","required","multiline","rows","onClick","variant","color","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/New folder/IPT-Final-2025/src/components/DepartmentDialog.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Button,\r\n  FormHelperText,\r\n} from '@mui/material';\r\nimport { Department } from '../services/storageService';\r\n\r\ninterface DepartmentDialogProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  onSave: (department: Department) => void;\r\n  department?: Department;\r\n  mode: 'add' | 'edit';\r\n}\r\n\r\nconst DepartmentDialog: React.FC<DepartmentDialogProps> = ({\r\n  open,\r\n  onClose,\r\n  onSave,\r\n  department,\r\n  mode,\r\n}) => {\r\n  const [formData, setFormData] = useState<Department>({\r\n    name: department?.name || '',\r\n    description: department?.description || '',\r\n  });\r\n\r\n  const [errors, setErrors] = useState<{\r\n    name?: string;\r\n    description?: string;\r\n  }>({});\r\n\r\n  React.useEffect(() => {\r\n    if (department) {\r\n      setFormData(department);\r\n    }\r\n    setErrors({});\r\n  }, [department]);\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: typeof errors = {};\r\n    \r\n    // Check required fields\r\n    if (!formData.name) newErrors.name = 'Department name is required';\r\n    if (!formData.description) newErrors.description = 'Description is required';\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n    // Clear error when user starts typing\r\n    if (errors[name as keyof typeof errors]) {\r\n      setErrors(prev => ({ ...prev, [name]: undefined }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (validateForm()) {\r\n      onSave(formData);\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>{mode === 'add' ? 'Add Department' : 'Edit Department'}</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          fullWidth\r\n          margin=\"normal\"\r\n          label=\"Dept. Name\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleInputChange}\r\n          error={!!errors.name}\r\n          helperText={errors.name}\r\n          required\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          margin=\"normal\"\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          value={formData.description}\r\n          onChange={handleInputChange}\r\n          multiline\r\n          rows={3}\r\n          error={!!errors.description}\r\n          helperText={errors.description}\r\n          required\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose}>Cancel</Button>\r\n        <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\">\r\n          {mode === 'add' ? 'Add' : 'Save'}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default DepartmentDialog; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}