{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Calvin_Ken\\\\Desktop\\\\IPT-Final-2025\\\\src\\\\pages\\\\Employees.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Paper, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button, Stack, IconButton, Chip } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport EmployeeDialog from '../components/EmployeeDialog';\nimport TransferDialog from '../components/TransferDialog';\nimport WorkflowDialog from '../components/WorkflowDialog';\nimport RequestDialog from '../components/RequestDialog';\nimport EmployeeRequestsDialog from '../components/EmployeeRequestsDialog';\nimport { storageService } from '../services/storageService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Employees = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [departments, setDepartments] = useState(storageService.getDepartments());\n  const [transfers, setTransfers] = useState([]);\n  const [requests, setRequests] = useState([]);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [transferDialogOpen, setTransferDialogOpen] = useState(false);\n  const [workflowDialogOpen, setWorkflowDialogOpen] = useState(false);\n  const [requestDialogOpen, setRequestDialogOpen] = useState(false);\n  const [requestHistoryDialogOpen, setRequestHistoryDialogOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState();\n  const [selectedRequest, setSelectedRequest] = useState();\n  const [dialogMode, setDialogMode] = useState('add');\n\n  // Load initial data\n  useEffect(() => {\n    storageService.initializeStorage();\n    setEmployees(storageService.getEmployees());\n    setDepartments(storageService.getDepartments());\n    setTransfers(storageService.getTransfers());\n    setRequests(storageService.getRequests());\n  }, []);\n\n  // Function to generate next employee ID\n  const getNextEmployeeId = () => {\n    const maxId = employees.reduce((max, employee) => {\n      const num = parseInt(employee.id.replace('EMP', ''));\n      return num > max ? num : max;\n    }, 0);\n    return `EMP${String(maxId + 1).padStart(3, '0')}`;\n  };\n  const handleAddClick = () => {\n    setSelectedEmployee(undefined);\n    setDialogMode('add');\n    setDialogOpen(true);\n  };\n  const handleEditClick = employee => {\n    setSelectedEmployee(employee);\n    setDialogMode('edit');\n    setDialogOpen(true);\n  };\n  const handleDeleteClick = employeeToDelete => {\n    const updatedEmployees = employees.filter(emp => emp.id !== employeeToDelete.id);\n    setEmployees(updatedEmployees);\n    storageService.setEmployees(updatedEmployees);\n  };\n  const handleTransferClick = employee => {\n    setSelectedEmployee(employee);\n    setTransferDialogOpen(true);\n  };\n  const handleWorkflowClick = employee => {\n    setSelectedEmployee(employee);\n    setWorkflowDialogOpen(true);\n  };\n  const handleRequestClick = employee => {\n    setSelectedEmployee(employee);\n    setRequestHistoryDialogOpen(true);\n  };\n  const handleNewRequestClick = employee => {\n    setSelectedEmployee(employee);\n    setRequestDialogOpen(true);\n  };\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n    setSelectedEmployee(undefined);\n  };\n  const handleTransferDialogClose = () => {\n    setTransferDialogOpen(false);\n    setSelectedEmployee(undefined);\n  };\n  const handleWorkflowDialogClose = () => {\n    setWorkflowDialogOpen(false);\n    setSelectedEmployee(undefined);\n  };\n  const handleRequestDialogClose = () => {\n    setRequestDialogOpen(false);\n    setSelectedEmployee(undefined);\n  };\n  const handleRequestHistoryDialogClose = () => {\n    setRequestHistoryDialogOpen(false);\n    setSelectedEmployee(undefined);\n  };\n  const handleEditRequest = request => {\n    setSelectedRequest(request);\n    setDialogMode('edit');\n    setRequestDialogOpen(true);\n    setRequestHistoryDialogOpen(false);\n  };\n  const handleDeleteRequest = request => {\n    storageService.deleteRequest(request.id);\n    setRequests(storageService.getRequests());\n  };\n  const handleSaveEmployee = employee => {\n    let updatedEmployees;\n    if (dialogMode === 'add') {\n      updatedEmployees = [...employees, employee];\n    } else {\n      updatedEmployees = employees.map(e => e.id === employee.id ? employee : e);\n    }\n    setEmployees(updatedEmployees);\n    storageService.setEmployees(updatedEmployees);\n  };\n  const handleTransfer = newDepartment => {\n    if (selectedEmployee) {\n      // Record the transfer\n      const transfer = {\n        employeeId: selectedEmployee.id,\n        fromDepartment: selectedEmployee.department,\n        toDepartment: newDepartment,\n        date: new Date().toISOString().split('T')[0]\n      };\n      storageService.addTransfer(transfer);\n      setTransfers([...transfers, transfer]);\n\n      // Update employee\n      const updatedEmployees = employees.map(e => e.id === selectedEmployee.id ? {\n        ...e,\n        department: newDepartment\n      } : e);\n      setEmployees(updatedEmployees);\n      storageService.setEmployees(updatedEmployees);\n    }\n  };\n  const handleSaveRequest = request => {\n    if (dialogMode === 'add') {\n      storageService.addRequest(request);\n    } else {\n      storageService.updateRequest(request);\n    }\n    setRequests(storageService.getRequests());\n    setRequestDialogOpen(false);\n    setSelectedRequest(undefined);\n  };\n\n  // Get account display name\n  const getAccountDisplay = email => {\n    const account = storageService.getAccounts().find(a => a.email === email);\n    return account ? `${account.title} ${account.firstName} ${account.lastName} (${account.role})` : email;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"EMPLOYEES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Employee ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Position\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Hire Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: employees.map(employee => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: employee.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: getAccountDisplay(employee.account)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: employee.position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: employee.department\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: employee.hireDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: employee.status,\n                  color: employee.status === 'Active' ? 'success' : 'error'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"row\",\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    size: \"small\",\n                    onClick: () => handleWorkflowClick(employee),\n                    children: \"Workflows\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    size: \"small\",\n                    color: \"secondary\",\n                    onClick: () => handleRequestClick(employee),\n                    children: \"Requests\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    size: \"small\",\n                    color: \"primary\",\n                    onClick: () => handleNewRequestClick(employee),\n                    children: \"New Request\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    size: \"small\",\n                    color: \"info\",\n                    onClick: () => handleTransferClick(employee),\n                    children: \"Transfer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    color: \"primary\",\n                    onClick: () => handleEditClick(employee),\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    color: \"error\",\n                    onClick: () => handleDeleteClick(employee),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this)]\n            }, employee.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        sx: {\n          mt: 2\n        },\n        onClick: handleAddClick,\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmployeeDialog, {\n      open: dialogOpen,\n      onClose: handleDialogClose,\n      onSave: handleSaveEmployee,\n      employee: selectedEmployee,\n      mode: dialogMode,\n      departments: departments,\n      accounts: dialogMode === 'add' ? storageService.getAvailableAccounts() : storageService.getAccounts(),\n      nextEmployeeId: getNextEmployeeId()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), selectedEmployee && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TransferDialog, {\n        open: transferDialogOpen,\n        onClose: handleTransferDialogClose,\n        onTransfer: handleTransfer,\n        departments: departments,\n        currentDepartment: selectedEmployee.department\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(WorkflowDialog, {\n        open: workflowDialogOpen,\n        onClose: handleWorkflowDialogClose,\n        employeeId: selectedEmployee.id,\n        transfers: transfers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RequestDialog, {\n        open: requestDialogOpen,\n        onClose: handleRequestDialogClose,\n        onSave: handleSaveRequest,\n        request: selectedRequest || {\n          id: storageService.getNextRequestId(),\n          type: 'Equipment',\n          employeeId: selectedEmployee.id,\n          description: '',\n          requestDate: new Date().toISOString().split('T')[0],\n          items: [{\n            name: '',\n            quantity: 1\n          }],\n          status: 'Pending'\n        },\n        mode: dialogMode,\n        employees: [selectedEmployee],\n        nextRequestId: storageService.getNextRequestId()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EmployeeRequestsDialog, {\n        open: requestHistoryDialogOpen,\n        onClose: handleRequestHistoryDialogClose,\n        employee: selectedEmployee,\n        requests: requests,\n        onEditRequest: handleEditRequest,\n        onDeleteRequest: handleDeleteRequest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(Employees, \"269LBUa6T3eN1AyblszvbMjyCCQ=\");\n_c = Employees;\nexport default Employees;\nvar _c;\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"names":["React","useState","useEffect","Container","Paper","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","Stack","IconButton","Chip","DeleteIcon","EditIcon","EmployeeDialog","TransferDialog","WorkflowDialog","RequestDialog","EmployeeRequestsDialog","storageService","jsxDEV","_jsxDEV","Fragment","_Fragment","Employees","_s","employees","setEmployees","departments","setDepartments","getDepartments","transfers","setTransfers","requests","setRequests","dialogOpen","setDialogOpen","transferDialogOpen","setTransferDialogOpen","workflowDialogOpen","setWorkflowDialogOpen","requestDialogOpen","setRequestDialogOpen","requestHistoryDialogOpen","setRequestHistoryDialogOpen","selectedEmployee","setSelectedEmployee","selectedRequest","setSelectedRequest","dialogMode","setDialogMode","initializeStorage","getEmployees","getTransfers","getRequests","getNextEmployeeId","maxId","reduce","max","employee","num","parseInt","id","replace","String","padStart","handleAddClick","undefined","handleEditClick","handleDeleteClick","employeeToDelete","updatedEmployees","filter","emp","handleTransferClick","handleWorkflowClick","handleRequestClick","handleNewRequestClick","handleDialogClose","handleTransferDialogClose","handleWorkflowDialogClose","handleRequestDialogClose","handleRequestHistoryDialogClose","handleEditRequest","request","handleDeleteRequest","deleteRequest","handleSaveEmployee","map","e","handleTransfer","newDepartment","transfer","employeeId","fromDepartment","department","toDepartment","date","Date","toISOString","split","addTransfer","handleSaveRequest","addRequest","updateRequest","getAccountDisplay","email","account","getAccounts","find","a","title","firstName","lastName","role","maxWidth","sx","mt","mb","children","p","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","position","hireDate","label","status","color","direction","spacing","size","onClick","open","onClose","onSave","mode","accounts","getAvailableAccounts","nextEmployeeId","onTransfer","currentDepartment","getNextRequestId","type","description","requestDate","items","name","quantity","nextRequestId","onEditRequest","onDeleteRequest","_c","$RefreshReg$"],"sources":["C:/Users/Calvin_Ken/Desktop/IPT-Final-2025/src/pages/Employees.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Paper,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Button,\n  Stack,\n  IconButton,\n  Chip,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport EmployeeDialog from '../components/EmployeeDialog';\nimport TransferDialog from '../components/TransferDialog';\nimport WorkflowDialog from '../components/WorkflowDialog';\nimport RequestDialog from '../components/RequestDialog';\nimport EmployeeRequestsDialog from '../components/EmployeeRequestsDialog';\nimport { storageService, Employee, TransferRecord, Request } from '../services/storageService';\n\nconst Employees = () => {\n  const [employees, setEmployees] = useState<Employee[]>([]);\n  const [departments, setDepartments] = useState(storageService.getDepartments());\n  const [transfers, setTransfers] = useState<TransferRecord[]>([]);\n  const [requests, setRequests] = useState<Request[]>([]);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [transferDialogOpen, setTransferDialogOpen] = useState(false);\n  const [workflowDialogOpen, setWorkflowDialogOpen] = useState(false);\n  const [requestDialogOpen, setRequestDialogOpen] = useState(false);\n  const [requestHistoryDialogOpen, setRequestHistoryDialogOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState<Employee | undefined>();\n  const [selectedRequest, setSelectedRequest] = useState<Request | undefined>();\n  const [dialogMode, setDialogMode] = useState<'add' | 'edit'>('add');\n\n  // Load initial data\n  useEffect(() => {\n    storageService.initializeStorage();\n    setEmployees(storageService.getEmployees());\n    setDepartments(storageService.getDepartments());\n    setTransfers(storageService.getTransfers());\n    setRequests(storageService.getRequests());\n  }, []);\n\n  // Function to generate next employee ID\n  const getNextEmployeeId = () => {\n    const maxId = employees.reduce((max, employee) => {\n      const num = parseInt(employee.id.replace('EMP', ''));\n      return num > max ? num : max;\n    }, 0);\n    return `EMP${String(maxId + 1).padStart(3, '0')}`;\n  };\n\n  const handleAddClick = () => {\n    setSelectedEmployee(undefined);\n    setDialogMode('add');\n    setDialogOpen(true);\n  };\n\n  const handleEditClick = (employee: Employee) => {\n    setSelectedEmployee(employee);\n    setDialogMode('edit');\n    setDialogOpen(true);\n  };\n\n  const handleDeleteClick = (employeeToDelete: Employee) => {\n    const updatedEmployees = employees.filter((emp) => emp.id !== employeeToDelete.id);\n    setEmployees(updatedEmployees);\n    storageService.setEmployees(updatedEmployees);\n  };\n\n  const handleTransferClick = (employee: Employee) => {\n    setSelectedEmployee(employee);\n    setTransferDialogOpen(true);\n  };\n\n  const handleWorkflowClick = (employee: Employee) => {\n    setSelectedEmployee(employee);\n    setWorkflowDialogOpen(true);\n  };\n\n  const handleRequestClick = (employee: Employee) => {\n    setSelectedEmployee(employee);\n    setRequestHistoryDialogOpen(true);\n  };\n\n  const handleNewRequestClick = (employee: Employee) => {\n    setSelectedEmployee(employee);\n    setRequestDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n    setSelectedEmployee(undefined);\n  };\n\n  const handleTransferDialogClose = () => {\n    setTransferDialogOpen(false);\n    setSelectedEmployee(undefined);\n  };\n\n  const handleWorkflowDialogClose = () => {\n    setWorkflowDialogOpen(false);\n    setSelectedEmployee(undefined);\n  };\n\n  const handleRequestDialogClose = () => {\n    setRequestDialogOpen(false);\n    setSelectedEmployee(undefined);\n  };\n\n  const handleRequestHistoryDialogClose = () => {\n    setRequestHistoryDialogOpen(false);\n    setSelectedEmployee(undefined);\n  };\n\n  const handleEditRequest = (request: Request) => {\n    setSelectedRequest(request);\n    setDialogMode('edit');\n    setRequestDialogOpen(true);\n    setRequestHistoryDialogOpen(false);\n  };\n\n  const handleDeleteRequest = (request: Request) => {\n    storageService.deleteRequest(request.id);\n    setRequests(storageService.getRequests());\n  };\n\n  const handleSaveEmployee = (employee: Employee) => {\n    let updatedEmployees: Employee[];\n    if (dialogMode === 'add') {\n      updatedEmployees = [...employees, employee];\n    } else {\n      updatedEmployees = employees.map((e) => (e.id === employee.id ? employee : e));\n    }\n    setEmployees(updatedEmployees);\n    storageService.setEmployees(updatedEmployees);\n  };\n\n  const handleTransfer = (newDepartment: string) => {\n    if (selectedEmployee) {\n      // Record the transfer\n      const transfer: TransferRecord = {\n        employeeId: selectedEmployee.id,\n        fromDepartment: selectedEmployee.department,\n        toDepartment: newDepartment,\n        date: new Date().toISOString().split('T')[0],\n      };\n      storageService.addTransfer(transfer);\n      setTransfers([...transfers, transfer]);\n\n      // Update employee\n      const updatedEmployees = employees.map((e) =>\n        e.id === selectedEmployee.id\n          ? { ...e, department: newDepartment }\n          : e\n      );\n      setEmployees(updatedEmployees);\n      storageService.setEmployees(updatedEmployees);\n    }\n  };\n\n  const handleSaveRequest = (request: Request) => {\n    if (dialogMode === 'add') {\n      storageService.addRequest(request);\n    } else {\n      storageService.updateRequest(request);\n    }\n    setRequests(storageService.getRequests());\n    setRequestDialogOpen(false);\n    setSelectedRequest(undefined);\n  };\n\n  // Get account display name\n  const getAccountDisplay = (email: string) => {\n    const account = storageService.getAccounts().find(a => a.email === email);\n    return account ? `${account.title} ${account.firstName} ${account.lastName} (${account.role})` : email;\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Paper sx={{ p: 2 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          EMPLOYEES\n        </Typography>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Employee ID</TableCell>\n                <TableCell>Account</TableCell>\n                <TableCell>Position</TableCell>\n                <TableCell>Department</TableCell>\n                <TableCell>Hire Date</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {employees.map((employee) => (\n                <TableRow key={employee.id}>\n                  <TableCell>{employee.id}</TableCell>\n                  <TableCell>{getAccountDisplay(employee.account)}</TableCell>\n                  <TableCell>{employee.position}</TableCell>\n                  <TableCell>{employee.department}</TableCell>\n                  <TableCell>{employee.hireDate}</TableCell>\n                  <TableCell>\n                    <Chip\n                      label={employee.status}\n                      color={employee.status === 'Active' ? 'success' : 'error'}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Stack direction=\"row\" spacing={1}>\n                      <Button\n                        variant=\"contained\"\n                        size=\"small\"\n                        onClick={() => handleWorkflowClick(employee)}\n                      >\n                        Workflows\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        size=\"small\"\n                        color=\"secondary\"\n                        onClick={() => handleRequestClick(employee)}\n                      >\n                        Requests\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        size=\"small\"\n                        color=\"primary\"\n                        onClick={() => handleNewRequestClick(employee)}\n                      >\n                        New Request\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        size=\"small\"\n                        color=\"info\"\n                        onClick={() => handleTransferClick(employee)}\n                      >\n                        Transfer\n                      </Button>\n                      <IconButton\n                        size=\"small\"\n                        color=\"primary\"\n                        onClick={() => handleEditClick(employee)}\n                      >\n                        <EditIcon />\n                      </IconButton>\n                      <IconButton\n                        size=\"small\"\n                        color=\"error\"\n                        onClick={() => handleDeleteClick(employee)}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Stack>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          sx={{ mt: 2 }}\n          onClick={handleAddClick}\n        >\n          Add Employee\n        </Button>\n      </Paper>\n\n      <EmployeeDialog\n        open={dialogOpen}\n        onClose={handleDialogClose}\n        onSave={handleSaveEmployee}\n        employee={selectedEmployee}\n        mode={dialogMode}\n        departments={departments}\n        accounts={dialogMode === 'add' ? storageService.getAvailableAccounts() : storageService.getAccounts()}\n        nextEmployeeId={getNextEmployeeId()}\n      />\n\n      {selectedEmployee && (\n        <>\n          <TransferDialog\n            open={transferDialogOpen}\n            onClose={handleTransferDialogClose}\n            onTransfer={handleTransfer}\n            departments={departments}\n            currentDepartment={selectedEmployee.department}\n          />\n          <WorkflowDialog\n            open={workflowDialogOpen}\n            onClose={handleWorkflowDialogClose}\n            employeeId={selectedEmployee.id}\n            transfers={transfers}\n          />\n          <RequestDialog\n            open={requestDialogOpen}\n            onClose={handleRequestDialogClose}\n            onSave={handleSaveRequest}\n            request={selectedRequest || {\n              id: storageService.getNextRequestId(),\n              type: 'Equipment',\n              employeeId: selectedEmployee.id,\n              description: '',\n              requestDate: new Date().toISOString().split('T')[0],\n              items: [{ name: '', quantity: 1 }],\n              status: 'Pending'\n            }}\n            mode={dialogMode}\n            employees={[selectedEmployee]}\n            nextRequestId={storageService.getNextRequestId()}\n          />\n          <EmployeeRequestsDialog\n            open={requestHistoryDialogOpen}\n            onClose={handleRequestHistoryDialogClose}\n            employee={selectedEmployee}\n            requests={requests}\n            onEditRequest={handleEditRequest}\n            onDeleteRequest={handleDeleteRequest}\n          />\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Employees; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}