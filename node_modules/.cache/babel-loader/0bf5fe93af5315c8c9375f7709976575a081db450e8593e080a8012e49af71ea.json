{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\IPT-Final-2025\\\\src\\\\pages\\\\Employees.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Paper, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Button, Stack, IconButton, Chip } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport EmployeeDialog from '../components/EmployeeDialog';\nimport TransferDialog from '../components/TransferDialog';\nimport WorkflowDialog from '../components/WorkflowDialog';\nimport { storageService } from '../services/storageService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Employees = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [departments, setDepartments] = useState(storageService.getDepartments());\n  const [transfers, setTransfers] = useState([]);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [transferDialogOpen, setTransferDialogOpen] = useState(false);\n  const [workflowDialogOpen, setWorkflowDialogOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState();\n  const [dialogMode, setDialogMode] = useState('add');\n\n  // Load initial data\n  useEffect(() => {\n    storageService.initializeStorage();\n    setEmployees(storageService.getEmployees());\n    setDepartments(storageService.getDepartments());\n    setTransfers(storageService.getTransfers());\n  }, []);\n\n  // Function to generate next employee ID\n  const getNextEmployeeId = () => {\n    const maxId = employees.reduce((max, employee) => {\n      const num = parseInt(employee.id.replace('EMP', ''));\n      return num > max ? num : max;\n    }, 0);\n    return `EMP${String(maxId + 1).padStart(3, '0')}`;\n  };\n  const handleAddClick = () => {\n    setSelectedEmployee(undefined);\n    setDialogMode('add');\n    setDialogOpen(true);\n  };\n  const handleEditClick = employee => {\n    setSelectedEmployee(employee);\n    setDialogMode('edit');\n    setDialogOpen(true);\n  };\n  const handleDeleteClick = employeeToDelete => {\n    const updatedEmployees = employees.filter(emp => emp.id !== employeeToDelete.id);\n    setEmployees(updatedEmployees);\n    storageService.setEmployees(updatedEmployees);\n  };\n  const handleTransferClick = employee => {\n    setSelectedEmployee(employee);\n    setTransferDialogOpen(true);\n  };\n  const handleWorkflowClick = employee => {\n    setSelectedEmployee(employee);\n    setWorkflowDialogOpen(true);\n  };\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n    setSelectedEmployee(undefined);\n  };\n  const handleTransferDialogClose = () => {\n    setTransferDialogOpen(false);\n    setSelectedEmployee(undefined);\n  };\n  const handleWorkflowDialogClose = () => {\n    setWorkflowDialogOpen(false);\n    setSelectedEmployee(undefined);\n  };\n  const handleSaveEmployee = employee => {\n    let updatedEmployees;\n    if (dialogMode === 'add') {\n      updatedEmployees = [...employees, employee];\n    } else {\n      updatedEmployees = employees.map(e => e.id === employee.id ? employee : e);\n    }\n    setEmployees(updatedEmployees);\n    storageService.setEmployees(updatedEmployees);\n  };\n  const handleTransfer = newDepartment => {\n    if (selectedEmployee) {\n      // Record the transfer\n      const transfer = {\n        employeeId: selectedEmployee.id,\n        fromDepartment: selectedEmployee.department,\n        toDepartment: newDepartment,\n        date: new Date().toISOString().split('T')[0]\n      };\n      storageService.addTransfer(transfer);\n      setTransfers([...transfers, transfer]);\n\n      // Update employee\n      const updatedEmployees = employees.map(e => e.id === selectedEmployee.id ? {\n        ...e,\n        department: newDepartment\n      } : e);\n      setEmployees(updatedEmployees);\n      storageService.setEmployees(updatedEmployees);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"EMPLOYEES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Employee ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Position\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Hire Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: employees.map(employee => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: employee.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: employee.account\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: employee.position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: employee.department\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: employee.hireDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: employee.status,\n                  color: employee.status === 'Active' ? 'success' : 'error'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"row\",\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    size: \"small\",\n                    onClick: () => handleWorkflowClick(employee),\n                    children: \"Workflows\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    size: \"small\",\n                    color: \"secondary\",\n                    children: \"Requests\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    size: \"small\",\n                    color: \"info\",\n                    onClick: () => handleTransferClick(employee),\n                    children: \"Transfer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    color: \"primary\",\n                    onClick: () => handleEditClick(employee),\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    color: \"error\",\n                    onClick: () => handleDeleteClick(employee),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this)]\n            }, employee.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        sx: {\n          mt: 2\n        },\n        onClick: handleAddClick,\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmployeeDialog, {\n      open: dialogOpen,\n      onClose: handleDialogClose,\n      onSave: handleSaveEmployee,\n      employee: selectedEmployee,\n      mode: dialogMode,\n      departments: departments,\n      accounts: storageService.getEmployees().map(e => ({\n        email: e.account,\n        firstName: e.account.split('@')[0],\n        lastName: ''\n      })),\n      nextEmployeeId: getNextEmployeeId()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), selectedEmployee && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TransferDialog, {\n        open: transferDialogOpen,\n        onClose: handleTransferDialogClose,\n        onTransfer: handleTransfer,\n        departments: departments,\n        currentDepartment: selectedEmployee.department\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(WorkflowDialog, {\n        open: workflowDialogOpen,\n        onClose: handleWorkflowDialogClose,\n        employeeId: selectedEmployee.id,\n        transfers: transfers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(Employees, \"vDmIMN5C5rpLmgfzc5SBGD0SbYs=\");\n_c = Employees;\nexport default Employees;\nvar _c;\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"names":["React","useState","useEffect","Container","Paper","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","Stack","IconButton","Chip","DeleteIcon","EditIcon","EmployeeDialog","TransferDialog","WorkflowDialog","storageService","jsxDEV","_jsxDEV","Fragment","_Fragment","Employees","_s","employees","setEmployees","departments","setDepartments","getDepartments","transfers","setTransfers","dialogOpen","setDialogOpen","transferDialogOpen","setTransferDialogOpen","workflowDialogOpen","setWorkflowDialogOpen","selectedEmployee","setSelectedEmployee","dialogMode","setDialogMode","initializeStorage","getEmployees","getTransfers","getNextEmployeeId","maxId","reduce","max","employee","num","parseInt","id","replace","String","padStart","handleAddClick","undefined","handleEditClick","handleDeleteClick","employeeToDelete","updatedEmployees","filter","emp","handleTransferClick","handleWorkflowClick","handleDialogClose","handleTransferDialogClose","handleWorkflowDialogClose","handleSaveEmployee","map","e","handleTransfer","newDepartment","transfer","employeeId","fromDepartment","department","toDepartment","date","Date","toISOString","split","addTransfer","maxWidth","sx","mt","mb","children","p","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","account","position","hireDate","label","status","color","direction","spacing","size","onClick","open","onClose","onSave","mode","accounts","email","firstName","lastName","nextEmployeeId","onTransfer","currentDepartment","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/IPT-Final-2025/src/pages/Employees.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Button,\r\n  Stack,\r\n  IconButton,\r\n  Chip,\r\n} from '@mui/material';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport EmployeeDialog from '../components/EmployeeDialog';\r\nimport TransferDialog from '../components/TransferDialog';\r\nimport WorkflowDialog from '../components/WorkflowDialog';\r\nimport { storageService, Employee, TransferRecord } from '../services/storageService';\r\n\r\nconst Employees = () => {\r\n  const [employees, setEmployees] = useState<Employee[]>([]);\r\n  const [departments, setDepartments] = useState(storageService.getDepartments());\r\n  const [transfers, setTransfers] = useState<TransferRecord[]>([]);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [transferDialogOpen, setTransferDialogOpen] = useState(false);\r\n  const [workflowDialogOpen, setWorkflowDialogOpen] = useState(false);\r\n  const [selectedEmployee, setSelectedEmployee] = useState<Employee | undefined>();\r\n  const [dialogMode, setDialogMode] = useState<'add' | 'edit'>('add');\r\n\r\n  // Load initial data\r\n  useEffect(() => {\r\n    storageService.initializeStorage();\r\n    setEmployees(storageService.getEmployees());\r\n    setDepartments(storageService.getDepartments());\r\n    setTransfers(storageService.getTransfers());\r\n  }, []);\r\n\r\n  // Function to generate next employee ID\r\n  const getNextEmployeeId = () => {\r\n    const maxId = employees.reduce((max, employee) => {\r\n      const num = parseInt(employee.id.replace('EMP', ''));\r\n      return num > max ? num : max;\r\n    }, 0);\r\n    return `EMP${String(maxId + 1).padStart(3, '0')}`;\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    setSelectedEmployee(undefined);\r\n    setDialogMode('add');\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  const handleEditClick = (employee: Employee) => {\r\n    setSelectedEmployee(employee);\r\n    setDialogMode('edit');\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  const handleDeleteClick = (employeeToDelete: Employee) => {\r\n    const updatedEmployees = employees.filter((emp) => emp.id !== employeeToDelete.id);\r\n    setEmployees(updatedEmployees);\r\n    storageService.setEmployees(updatedEmployees);\r\n  };\r\n\r\n  const handleTransferClick = (employee: Employee) => {\r\n    setSelectedEmployee(employee);\r\n    setTransferDialogOpen(true);\r\n  };\r\n\r\n  const handleWorkflowClick = (employee: Employee) => {\r\n    setSelectedEmployee(employee);\r\n    setWorkflowDialogOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setDialogOpen(false);\r\n    setSelectedEmployee(undefined);\r\n  };\r\n\r\n  const handleTransferDialogClose = () => {\r\n    setTransferDialogOpen(false);\r\n    setSelectedEmployee(undefined);\r\n  };\r\n\r\n  const handleWorkflowDialogClose = () => {\r\n    setWorkflowDialogOpen(false);\r\n    setSelectedEmployee(undefined);\r\n  };\r\n\r\n  const handleSaveEmployee = (employee: Employee) => {\r\n    let updatedEmployees: Employee[];\r\n    if (dialogMode === 'add') {\r\n      updatedEmployees = [...employees, employee];\r\n    } else {\r\n      updatedEmployees = employees.map((e) => (e.id === employee.id ? employee : e));\r\n    }\r\n    setEmployees(updatedEmployees);\r\n    storageService.setEmployees(updatedEmployees);\r\n  };\r\n\r\n  const handleTransfer = (newDepartment: string) => {\r\n    if (selectedEmployee) {\r\n      // Record the transfer\r\n      const transfer: TransferRecord = {\r\n        employeeId: selectedEmployee.id,\r\n        fromDepartment: selectedEmployee.department,\r\n        toDepartment: newDepartment,\r\n        date: new Date().toISOString().split('T')[0],\r\n      };\r\n      storageService.addTransfer(transfer);\r\n      setTransfers([...transfers, transfer]);\r\n\r\n      // Update employee\r\n      const updatedEmployees = employees.map((e) =>\r\n        e.id === selectedEmployee.id\r\n          ? { ...e, department: newDepartment }\r\n          : e\r\n      );\r\n      setEmployees(updatedEmployees);\r\n      storageService.setEmployees(updatedEmployees);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n      <Paper sx={{ p: 2 }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          EMPLOYEES\r\n        </Typography>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Employee ID</TableCell>\r\n                <TableCell>Account</TableCell>\r\n                <TableCell>Position</TableCell>\r\n                <TableCell>Department</TableCell>\r\n                <TableCell>Hire Date</TableCell>\r\n                <TableCell>Status</TableCell>\r\n                <TableCell>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {employees.map((employee) => (\r\n                <TableRow key={employee.id}>\r\n                  <TableCell>{employee.id}</TableCell>\r\n                  <TableCell>{employee.account}</TableCell>\r\n                  <TableCell>{employee.position}</TableCell>\r\n                  <TableCell>{employee.department}</TableCell>\r\n                  <TableCell>{employee.hireDate}</TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      label={employee.status}\r\n                      color={employee.status === 'Active' ? 'success' : 'error'}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        onClick={() => handleWorkflowClick(employee)}\r\n                      >\r\n                        Workflows\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        color=\"secondary\"\r\n                      >\r\n                        Requests\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        color=\"info\"\r\n                        onClick={() => handleTransferClick(employee)}\r\n                      >\r\n                        Transfer\r\n                      </Button>\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        onClick={() => handleEditClick(employee)}\r\n                      >\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        color=\"error\"\r\n                        onClick={() => handleDeleteClick(employee)}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </Stack>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          sx={{ mt: 2 }}\r\n          onClick={handleAddClick}\r\n        >\r\n          Add Employee\r\n        </Button>\r\n      </Paper>\r\n\r\n      <EmployeeDialog\r\n        open={dialogOpen}\r\n        onClose={handleDialogClose}\r\n        onSave={handleSaveEmployee}\r\n        employee={selectedEmployee}\r\n        mode={dialogMode}\r\n        departments={departments}\r\n        accounts={storageService.getEmployees().map(e => ({\r\n          email: e.account,\r\n          firstName: e.account.split('@')[0],\r\n          lastName: '',\r\n        }))}\r\n        nextEmployeeId={getNextEmployeeId()}\r\n      />\r\n\r\n      {selectedEmployee && (\r\n        <>\r\n          <TransferDialog\r\n            open={transferDialogOpen}\r\n            onClose={handleTransferDialogClose}\r\n            onTransfer={handleTransfer}\r\n            departments={departments}\r\n            currentDepartment={selectedEmployee.department}\r\n          />\r\n          <WorkflowDialog\r\n            open={workflowDialogOpen}\r\n            onClose={handleWorkflowDialogClose}\r\n            employeeId={selectedEmployee.id}\r\n            transfers={transfers}\r\n          />\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Employees; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}