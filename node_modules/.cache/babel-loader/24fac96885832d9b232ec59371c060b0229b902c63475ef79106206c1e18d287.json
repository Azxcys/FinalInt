{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Calvin_Ken\\\\Desktop\\\\IPT-Final-2025\\\\src\\\\components\\\\WorkflowDialog.tsx\";\nimport React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Chip } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkflowDialog = ({\n  open,\n  onClose,\n  employeeId,\n  transfers,\n  requests,\n  department\n}) => {\n  const employeeTransfers = transfers.filter(t => t.employeeId === employeeId);\n  const employeeRequests = requests.filter(r => r.employeeId === employeeId);\n\n  // Combine and sort all workflow items\n  const workflowItems = [\n  // Onboarding record\n  {\n    date: new Date().toISOString().split('T')[0],\n    details: `OnBoarding on ${department}`,\n    status: 'Approved',\n    action: ''\n  },\n  // Transfer records\n  ...employeeTransfers.map(transfer => ({\n    date: transfer.date,\n    details: `Employee Transferred From ${transfer.fromDepartment} to ${transfer.toDepartment}`,\n    status: 'Completed',\n    action: ''\n  })),\n  // Request records\n  ...employeeRequests.map(request => ({\n    date: request.requestDate,\n    details: `Requested ${request.type}: ${request.items.map(item => item.name).join(', ')}`,\n    status: request.status,\n    action: ''\n  }))].sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n  const getStatusColor = status => {\n    switch (status) {\n      case 'Approved':\n      case 'Completed':\n        return 'success';\n      case 'Disapproved':\n        return 'error';\n      default:\n        return 'warning';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    maxWidth: \"md\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Workflow History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [workflowItems.map((item, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.details\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Chip, {\n                  label: item.status,\n                  color: getStatusColor(item.status)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.action\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)), workflowItems.length === 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 4,\n                align: \"center\",\n                children: \"No workflow history found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_c = WorkflowDialog;\nexport default WorkflowDialog;\nvar _c;\n$RefreshReg$(_c, \"WorkflowDialog\");","map":{"version":3,"names":["React","Dialog","DialogTitle","DialogContent","DialogActions","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Chip","jsxDEV","_jsxDEV","WorkflowDialog","open","onClose","employeeId","transfers","requests","department","employeeTransfers","filter","t","employeeRequests","r","workflowItems","date","Date","toISOString","split","details","status","action","map","transfer","fromDepartment","toDepartment","request","requestDate","type","items","item","name","join","sort","a","b","getTime","getStatusColor","maxWidth","fullWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","component","index","label","color","length","colSpan","align","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Calvin_Ken/Desktop/IPT-Final-2025/src/components/WorkflowDialog.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Chip,\r\n} from '@mui/material';\r\nimport { TransferRecord, Request } from '../services/storageService';\r\n\r\ninterface WorkflowDialogProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n  employeeId: string;\r\n  transfers: TransferRecord[];\r\n  requests: Request[];\r\n  department: string;\r\n}\r\n\r\nconst WorkflowDialog: React.FC<WorkflowDialogProps> = ({\r\n  open,\r\n  onClose,\r\n  employeeId,\r\n  transfers,\r\n  requests,\r\n  department,\r\n}) => {\r\n  const employeeTransfers = transfers.filter(t => t.employeeId === employeeId);\r\n  const employeeRequests = requests.filter(r => r.employeeId === employeeId);\r\n\r\n  // Combine and sort all workflow items\r\n  const workflowItems = [\r\n    // Onboarding record\r\n    {\r\n      date: new Date().toISOString().split('T')[0],\r\n      details: `OnBoarding on ${department}`,\r\n      status: 'Approved',\r\n      action: ''\r\n    },\r\n    // Transfer records\r\n    ...employeeTransfers.map(transfer => ({\r\n      date: transfer.date,\r\n      details: `Employee Transferred From ${transfer.fromDepartment} to ${transfer.toDepartment}`,\r\n      status: 'Completed',\r\n      action: ''\r\n    })),\r\n    // Request records\r\n    ...employeeRequests.map(request => ({\r\n      date: request.requestDate,\r\n      details: `Requested ${request.type}: ${request.items.map(item => item.name).join(', ')}`,\r\n      status: request.status,\r\n      action: ''\r\n    }))\r\n  ].sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'Approved':\r\n      case 'Completed':\r\n        return 'success';\r\n      case 'Disapproved':\r\n        return 'error';\r\n      default:\r\n        return 'warning';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"md\" fullWidth>\r\n      <DialogTitle>Workflow History</DialogTitle>\r\n      <DialogContent>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Date</TableCell>\r\n                <TableCell>Details</TableCell>\r\n                <TableCell>Status</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {workflowItems.map((item, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{item.date}</TableCell>\r\n                  <TableCell>{item.details}</TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      label={item.status}\r\n                      color={getStatusColor(item.status)}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>{item.action}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {workflowItems.length === 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={4} align=\"center\">\r\n                    No workflow history found\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose}>Close</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default WorkflowDialog; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}